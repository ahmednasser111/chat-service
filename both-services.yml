version: '3.9'

networks:
  microservices-net:
    driver: bridge

# ---------- AUTH STACK ----------
services:
  auth-postgres:
    image: postgres:15
    container_name: auth-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: authdb
    ports:
      - '5433:5432'
    networks:
      - microservices-net

  auth-redis:
    image: redis:7
    container_name: auth-redis
    ports:
      - '6381:6379'
    networks:
      - microservices-net

  auth-zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: auth-zookeeper
    ports:
      - '2182:2181'
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    networks:
      - microservices-net

  auth-kafka:
    image: bitnami/kafka:3.7.0
    container_name: auth-kafka
    ports:
      - '9093:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: auth-zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    depends_on:
      - auth-zookeeper
    networks:
      - microservices-net

  auth-service:
    build: ./auth-service
    container_name: auth-service
    ports:
      - '3001:3001'
    environment:
      PORT: 3001
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:postgres@auth-postgres:5432/authdb
      REDIS_URL: redis://auth-redis:6379
      KAFKA_BROKER: auth-kafka:9092
    depends_on:
      - auth-postgres
      - auth-redis
      - auth-kafka
    networks:
      - microservices-net

  # ---------- CHAT STACK ----------
  chat-postgres:
    image: postgres:15
    container_name: chat-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chatdb
    ports:
      - '5434:5432'
    networks:
      - microservices-net

  chat-redis:
    image: redis:7
    container_name: chat-redis
    ports:
      - '6382:6379'
    networks:
      - microservices-net

  chat-zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: chat-zookeeper
    ports:
      - '2183:2181'
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'
    networks:
      - microservices-net

  chat-kafka:
    image: bitnami/kafka:3.7.0
    container_name: chat-kafka
    ports:
      - '9094:9092'
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: chat-zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    depends_on:
      - chat-zookeeper
    networks:
      - microservices-net

  chat-service:
    build: ./chat-service
    container_name: chat-service
    ports:
      - '3002:3002'
    environment:
      PORT: 3002
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:postgres@chat-postgres:5432/chatdb
      REDIS_URL: redis://chat-redis:6379
      KAFKA_BROKER: chat-kafka:9092
    depends_on:
      - chat-postgres
      - chat-redis
      - chat-kafka
    networks:
      - microservices-net
